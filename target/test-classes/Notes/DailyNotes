Automation Testing:
---------
Testing any application feature with the help of Automation tool .
-----------
Protector
Sahi
Sahi pro
Appium 
Selenium
Ranorex

Manual Testing Dis 
-------------------------
1.required more resources 
2.Regression Testing ---time consuming 
3.CrossBrowser Testing --- time consuming and its difficults
    5 Browser -- 1 Test -- 10 min =5*10 =50 min 
4.test cycle duration increase 

Automation Testing Adv
-------------------------
1. required less resources 
2. Regression Testing -- less time required 
3. crossBowser Testing -- required less time and its easy
4. Test cycle duration decrease 

Selenium
===============
1.open sources - no licence required 
2.support multiple langauges -- Java ,C#,JS,Python ...
3.support multiple O.S.
4.its support crossBrowser Test

Selenium Dis
----------------
1. we can automate only Web Application - we can not automate StandAlone Application EX. Calculator 
2. captcha and Barcode --we can not Automate  
3. file upload and file download task --- AutoIT /Robot class 

======================================================================

Maven Project  ---
Maven -- Build Managment tool 

src/main/java
src/main/resources
src/test/java
  com.Test
     Test1
     Test2
src/test/resources
pom.xml  ---- we add dependancy
Maven depenadancies ---- requried jar file
=================================================

Selenium Arch

Search context (I) --extends-WebDriver (I)---Implements--Remote WebDriver Class (C)-extends--
Multiple Browser driver classes (ChromeDriver ,EdgeDriver,..) (C)


Maven repo :

https://mvnrepository.com/

=========================
Selenium dependancy
<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>4.15.0</version>
</dependency>

===============================================

First Script Automation Script
-------------
Selenium -- Add
WebDriverManager --- Browser execution --- setup 

Browser.exe 
system.setProperty(key,value);
====================================================
navigation 

driver.navigate().to("url");

driver.navigate.back();

driver.navigate.forward();

driver.navigate.refresh();
============================================
WebElement -- Any thing on Webpage 

text field ,Radio Button ,check box ,Button ,link ,Img ,text

Locators -- we identify webelement 

8 types of Locators 

1.Id
2.Name
3.className
4.Tagname
5.Xpath
6.LinkText
7.Partial link text
8.CSS 

WebElement EmailID=driver.findElement(By.name("email"));
EmailID.sendKeys("Test123@gmail.com");

WebElement Password=driver.findElement(By.name("pass"));
Password.sendkeys("12345678");

WebElement LoginButton=driver.findElement(By.name("login"));
LoginButton.click();

===============================================
Task Url = https://demo.guru99.com/test/newtours/register.php


ID  -Locator 

WebElement element=driver.findElement(By.id("value"));

if(element.isenabled && element.isDispalyed){
   element.sendkeys("Test");
}
else{
  //syso
}

T && T =T
T && F =F
F && T =F
F && F =F
==================================================
Xpath ---> WebElement identify

 1.Absolute Xpath
 ------------------------
 parent node navigate immidiate child node ---Webelement 
 Xpath ---
 
 Start "/"
 1. Xpath expression lengthly 
 2. UI changes --- xpath collapse 
 
 1234567
 
 WebElement element =driver.findElement(By.xpath("/html/body/div[1]/div[1]/div[1]/div/div/div/div[2]/div/div[1]/form/div[1]/div[1]/input"));

 2.Relative Xpath 
==========================
parent node navigate any child node 
Child Node 

-start "//"

Xpath by attribute 
Xpath by text
Xpath by contains 
Xpath by index 

================================================

DOM ---html 

tagname -- anything after <
ex. <input
    <div
    <frame
    <li

attribute
attributevalue

attribute="attributevalue"
ex.
id="123"
name="test"
type="text"

text
------------
>text<

ex.>Forgotten password?<

1.Xpath by attribute == ID,name
-----------------------------------

//tagname[@attributename='attributevalue']

ex.//input[@id='email']

WebElement element=driver.findElement(By.xpath("//input[@id='email']"));

2. Xpath by contains 
---------------------------
//tagname[contains(@attributename,'static value attribute')]
ex.//button[contains(@id,'u_0_5')]

//tagname[conatins(text(),'static value of text')]

ex .//a[contains(text(),'Forgotten ')]


WebElement element=driver.findElement(By.xpath("//button[contains(@id,'u_0_5')]"));


3. Xpath by text
------------------------
//tagname[text()='text value']

ex.//a[text()='Forgotten password?']


WebElement element=driver.findElement(By.xpath("//a[text()='Forgotten password?']"));

4. Xpath by index 
----------------------

(xpath expression)[index]
ex.
(//input[@type='text'])[3]

WebElement element=driver.findElement(By.xpath("(//input[@type='text'])[3]"));

==========================================
//tagname[@attributename='value']
//tagname[contains(@attributename,'static value ')]
//tagname[contains(text(),'static value')]

//tagname[text()='text value ']

(xpath expression)[index]

================================================

Select Class -How to handle dropdown 

DropDown ---tagname select -- Select class 

WebElement Country=driver.findElement(By.xpath("xpath expression"));
Select dropdown= new Select(Country);
dropdown.selectByIndex(3);
dropdown.selectByvalue("8");
dropdown.selectByVisibletext("ANTARCTICA");


List<WebElement> list=dropdown.getOptions();

list.get(0)
String text=list.get(1).gettext();


for(int i=0;i<list.size();i++){

  String value=list.get(i).gextext();

  if(value.equals("ABC")){
  
    list.get(i).click();
    break;
  }

}

== equals 

====================================================

How to capture Screenshot 
----------------

FullPage 
WebElement

SC -->Webdriver ,TakesScreenshot---RWC ---browserDriver classes 
TakesScreenshot --Interface 


How to capture FullPage
--------------------------------
TakesScreenshot ts=(TakesScreenshot)driver; // WebDriver driver=new ChromeDriver();
                                            
TakesScreenshot ts=driver;  // ChromeDriver driver=new ChromeDriver();
File src=ts.getScrrenshotAs(outputType.FILE);
File destn=new File(Location//Test.png);
FileHandler.copyFile(src,destn);

String Location =System.getproperty("user.dir");

String RM=RandomString.make(5);

// use date to save scrrenshot name 

SimpleDateFormat formater=new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
Date date=new Date();
String Currentdate=formater.format(date);
String cDate=Currentdate.replace("/","_").replace(" ", "_").repalce(":","_");
=================================

How to get Screenshot of WebElement

WebElement element=driver.findElement(By.xpath("Xpath expression"));
File src=element.getscreenshotAs(outPutType.FILE);
File destn=new File(location\\elementname.png);
FileUtils.copyfile(src,destn);

==========================================

Scroll on WebPage 
----------------------
Pixel 
WebElement

SC -WD ,TS ,JS --RWC --Multiple Browser driver classes 

JavaScriptExecutor js=(JavaScriptExecutor)driver; // WebDriver driver

JavaScriptExecutor js=driver; //ChromeDriver driver

//Top -Bottom 
js.executeScript("window.scrollBy(0,350)"," "); // vertically 350 pixel

//Bottom -top
js.executeScript("window.scrollBy(0,-350)"," "); // vertically -350 pixel


================================================================

Actions class 
-------------------------------------
mouse movement and keyboard actions 

element --mouse hover --options ---click
double click 
right click 
source drag destn drop 

element --Upper case 
text data -ctrl + c ctrl +v


Actions act=new Actions(driver);

act.movetoelement(element).click().build().perform();

================================================================

Actions act=new Actions(driver);
		WebElement src=driver.findElement(By.xpath("(//a[@class='button button-orange'])[5]"));
		WebElement target=driver.findElement(By.xpath("(//li[@class='placeholder'])[1]"));
		act.dragAndDrop(src, target).build().perform();
		
		Library.dragDropActions(driver, src, target);
		
		
		==============================================
		
		keyDown()
		KeyUp()
		
		ex . WebELement ---Uppercase ---Keyboard TEST
		
		Actions act=new Actions(driver);

      act.keyDown(element ,Keys.SHIFT).sendkeys("test").keyUp(Keys.SHIFT).build().perform();


       ctrl+a  -select
       
       ctrl +c 
       
       element -hit
       
       ctrl +v

====================================================================
How to read Test Data from Excel

WebElement element=driver.findElement(By.xpath("Xpath expression"));
element.sendKeys("Test@gmail.com");

excel --row ,cell

Apache POI --

poi common 
poi ooxml 

--------------------------
excel --
//step 1
String path="C:\Users\Dell\eclipse-workspace\AutomationTestProject_Batch23\TestData\Data.xlsx";
//step 2
FileInutStream file=new FileInutStream(path);
//step 3
XSSFWorkbook wb=new XSSFWorkbook(file);
//step 4
String data=wb.getsheetname("Sheet1").getrow(0).getcell(0).getStringcellvalue();

WebElement element=driver.findElement(By.xpath("Xpath expression"));
element.sendKeys(data);




































